(((((((((((((((((((20220210)))))))))))))))))))))))))))

///////////////////
분할 할당 개수 만큼의 변수 = map(int,input().split())
https://dojang.io/mod/page/view.php?id=2179
////////////////////


/////////////////////////
내장함수 map [https://wikidocs.net/32]

lambda 함수 [https://wikidocs.net/64](https://wikidocs.net/64)
//////////////////////////


////////////////////////
나눗셈 a/b에서 a,b가 모두 int(정수) 여도 답은 소숫점까지 포함되어 나온다.  
///////////////////////

/////////////////////
list를 사용할 때, c처럼 접근하면 안되는 부분 : https://power-of-optimism.tistory.com/123
///////////////////////////////
result = []
result[0] = 1

==> 에러남 
이유 : result에는 아무것도 없는데 0번위치에 접근하려 하니까

그러므로 append나 insert아용해야함.  .append()  or .insert(위치,값)

다른 방법
result = []
result = [0]*10   # 0이 들어가 있는 10개의 방 마련
result[0] = 대입값




////////////////
빠른 입출력 :https://www.acmicpc.net/board/view/22716

////////////////

Python을 사용하고 있다면, input 대신 sys.stdin.readline을 사용할 수 있다. 
단, 이때는 맨 끝의 개행문자까지 같이 입력받기 때문에 문자열을 저장하고 싶을 경우
 .rstrip()을 추가로 해 주는 것이 좋다.

+ .rstrip() : https://codechacha.com/ko/python-string-strip/

++++.rstrip() 쓸때 주의점
.rstrip()은 참조하려는 문자열을 복사 한다음 개행문자를 제거하는 것이므로, 원 문자열은 변하지 않는다. => 대입을 통해 새로 받아와야 한다.

ex)
import sys
test =[]
a= sys.stdin.readline()
test.append(a.rstrip())
b= sys.stdin.readline()
b.rstrip()
test.append(b)
print(test)

출력:
hel
lo
['hel', 'lo\n']


-------------------------------
2단 for loop 내부에서 변수 처리 정확히 
------------------------------
ex) 별쌓기
r=int(input())
for i in range(r):
    for k in range(i+1):
        print('*',end="")
    print()

밖에서 r개의 루프를 걸 거라고 한다 해도 루프 안에서는 i 값이 0,1,2,3,4가 되므로, 이 i를 가지고 range 하면 최대 4반복밖에 못한다. (+를 해주지 않으면)

이해하기 쉽게 아예 r 받으면 1부터 시작해서 5로 끝나는(1,2,3,4,5)가 되도록 range(1,r+1)를 해놓고 내부에서 i를 접근하는게 편하다.


-------------------------------------
출력표현 파이썬 복습
------------------------------------
// 양 끝 정렬

# ljust(숫자), rjust(숫자) : 왼쪽 정렬+숫자만큼의 공간 확보 , 오른쪽 정렬+숫자만큼의 공간 확보

ex) 시험성적
scores = {"수학":0, "영어": 50, "코딩": 100}
for subject,score in scores.items():
    #print(subject,score)
    print(subject.ljust(8),str(score).rjust(4), sep=":") 
 
출력 => 
수학      :   0
영어      :  50
코딩      : 100
----------------------------------------------------------------------
# zfill(숫자) : 숫자만큼의 공간 확보하고, 남는 공간 0으로 채움

ex) 
# 은행 대기순번표
#001 , 002 , 003 ...
for num in range(1,21):
    print("대기번호 : "+str(num).zfill(3))

출력 => 
대기번호 : 001
대기번호 : 002
대기번호 : 003
대기번호 : 004
대기번호 : 005 ...


#다양한 출력 포멧

빈 자리는 빈공간으로 두고, 오른쪽 정렬, 총 10자리 공간 확보 <=> {0: >10}

print("{0: >10}".format(500))   // >기호 왼쪽에 띄어쓰기 되어있음 =>빈공간을 띄어쓰기로 채움

[10칸 확보, 오른쪽 정렬] + 양수일 땐 + 로 표시, 음수일 땐 -로 표시 (+를 안적으면 양수일때는 그대로, 음수일 때는 -붙음)
print("{0: >+10}".format(500))
print("{0: >+10}".format(-500))

#왼쪽 정렬, 빈칸을 _로 채움
print("{0:_<10}".format(500))

# 3자리마다 콤마
print("{0:,}".format(100000000000)) # 3자리 마다 콤마 찍어주기
print("{0:+,}".format(100000000000)) # + 기호, 3자리 마다 콤마 찍어주기

# 복잡한 조합
빈 자리는 ^ 로, 좌측 정렬, + 기호, 30 칸의 공간 확보, 3자리 마다 콤마 찍어주기
 print("{0:^<+30,}".format(100000000000))

# 소숫점 출력
 print("{0:f}".format(5/3)) # 실수 값 출력 / 소숫점 6번째 자리 까지 (기본)
 print("{0:.2f}".format(5/3)) # 실수 값 출력 / 소숫점 2번째 자리 까지 (설정)

# 총정리
 print 내에서 
{인덱스:[[빈자리채우기]정렬][기호][확보공간][콤마][.자릿수][타입]}


----------------------------------------
input().split()으로 만든 리스트에 대하여...
-----------------------------------------
일단 a= input().split()을 통해 문자열을 입력받으면 이는 공백기준으로 분리하여 리스트 형태로 저장한다.
하지만, 이때, 리스트 내부의 원소 ex a[1] 를 접근해보면, 이 a[1]에 해당하는 정보가 정수임에도 불구하고 type이 str이다.

ex_
a=input().split()
print(type(a[1]))

출력:
1 2 4
<class 'str'>

그러므로 이 정보를 사용하려면 int()를 씌워 주어야 한다.


+++++ #a = list(map(int, input().split())) 로 하면, list 내부의 원소 값이 정수일 경우 인식 가능 
 => 리스트 내부를 접근 a[1] 하면 type이 정수 나옴(정수일 경우)   
 ///// 앞에 경우에서는 정수여도 str로 인식



------------------------------------
sort() 와 sorted()  : https://cigiko.cafe24.com/python-%EC%A0%95%EB%A0%AC%ED%95%98%EA%B8%B0-sort%EC%99%80-sorted/
----------------------------------
sort()는 변수 자체 변경
sorted()는 변수 복사해와 이후 진행 => 원래 변수에 영향 주지 않음

+ " ".join()은 str형태의 원소를 가진 list만을 합칠 수 있다.(정수형 원소들은 못합침)




-------------------------------------------------
input을 통해 받아온 값을 list로 형태변환 해준다는 것  
--------------------------------------------------
a=list((input()))
print(a)
print(type(a[0]))

입력: 20
출력 : 
['2', '0']
<class 'str'>

!!!!!!!!!!!!!!!!! 문자열을 쓰면 하나하나씩 나뉘어서 list로 저장된다!!!!!!!!
정수는 안된다.

그래서 정수 분리해서 int 형으로 원소를 넣어주려면
i=정수
a= list(str(i))
a_=[int(i) for i in a]
다음과 같이 해주어야 한다.



---------------------------------------------------
문자열, 리스트 내 문자 위치 찾기, 몇개 있는가 복습
--------------------------------------------------
index = python.index("n")  : 몇번째 위치해 있는지 (맨 처음 0번부터 시작)   #리스트 형태도 사용 가능
print(index)  =>5
index = python.index("n", index+1)  6번쨰 위치부터 그 뒤에 n 이 몇번째 있는지 (순서는 맨 처음부터 시작) 

python.find("n")  : n이 몇번째?(0부터 시작)  # 리스트 형태는 사용 불가능
python.find("Java") = -1 로 나옴 즉 없다는 뜻,   python.index("Java") => 에러남


python.count("n") : n이 총 몇번?




----------------------------------------
set()을 통한 서로 다른 원소 개수 찾기
---------------------------------------
a = [int(input()) for _ in range(10)]
b = [i % 42 for i in a]

print(len(set(b)))


-----------------------------------------
반올림 및 소숫점 표현
--------------------------------------
+소숫점 몇째자리까지? 표현하고, 반올림 할 것인가 
=> round(값, 몇째자리 숫자)

  + https://ojt90902.tistory.com/563 
=> 입력받는 값이 정수이면 저 round만으로 소숫점 표현 하지 못함=> 소숫점 항상 만들라면
 :.몇f 형태 이용

-----------------------------------------
집합 내용 복습 + 추가 내용:https://withcoding.com/77
---------------------------------------

//집함 (set) : 중복 안되고, 순서 없음

my_set = {1,2,3,3,3}
print(my_set) = 1,2,3

집합 정의방법
{} or set([]) :리스트로 만들고 set으로 감싸줌   # 나중에 리스트 정보를 집합으로 만들어 사용 가능

java = {"a","b","c"}
python =set(["a","d"])

교집합

print(java & python) = {'a'}       ( =   print(java.intersection(python))   )


합집합
 print( java | python)                (  =  print(java.union(python)    )


차집합  (java 0     /  python  x  )
print (java-python)   print(java.differrence(python))


집합에 원소 추가
python.add("김태호")

집합에 원소 삭제
java.remove("a")  


------------------------------------------
아스키 코드 : https://ddolcat.tistory.com/684
---------------------------------------
chr() : 아스키-> 문자
ord() : 문자 -> 아스키


--------------------------------------------
QR Code "alphanumeric" 문자는 0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\$%*+-./:
----------------------------------------------

------------------------------------
sort(reverse=True) 와 reverse() 구분 :https://blog.naver.com/wideeyed/221745432175
---------------------------------------------


-----------------------------------
index의 .count 기능 까먹지 말기!!!  #백준 1157
----------------------------------


-------------------------------------
리스트 extended slices : https://blog.wonkyunglee.io/3
-----------------------------------
>> arr = range(10) 
>> arr [0,1,2,3,4,5,6,7,8,9] 
>> arr[::2] # 처음부터 끝까지 두 칸 간격으로 [0,2,4,6,8]
>> arr[1::2] # index 1 부터 끝까지 두 칸 간격으로 [1,3,5,7,9] 
>> arr[::-1] # 처음부터 끝까지 -1칸 간격으로 ( == 역순으로) [9,8,7,6,5,4,3,2,1,0] 
>> arr[::-2] # 처음부터 끝까지 -2칸 간격으로 ( == 역순, 두 칸 간격으로) [9,7,5,3,1] 
>> arr[3::-1] # index 3 부터 끝까지 -1칸 간격으로 ( == 역순으로) [3,2,1,0] 
>> arr[1:6:2] # index 1 부터 index 6 까지 두 칸 간격으로 [1,3,5]
